version: '3.8'

services:
  api:
    container_name: egoblur_api
    build: 
      context: ./api
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    command: ./start.sh
    volumes:
      - ${HOME}/ego_blur_assets:/ego_blur_assets
      - ./logs/api:/app/logs
      - ./demo_assets:/app/demo_assets
    environment:
      - WORKERS_PER_CORE=1
      - WEB_CONCURRENCY=2
      - LOG_LEVEL=info
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    networks:
      - egoblur_network

  processor:
    container_name: egoblur_processor
    build: 
      context: ./processor
      dockerfile: Dockerfile
    # NEW: Added time limits to Celery worker
    command: celery -A tasks worker -P eventlet --loglevel=info --time-limit=3600 --soft-time-limit=3600
    volumes:
      - ${HOME}/ego_blur_assets:/ego_blur_assets
      - ./logs/celery:/app/logs
      - ./demo_assets:/app/demo_assets
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      # NEW: Added Celery task configurations
      - CELERY_TASK_TIME_LIMIT=3600
      - CELERY_TASK_SOFT_TIME_LIMIT=3600
      - CELERY_BROKER_HEARTBEAT=0
      - CELERY_BROKER_CONNECTION_TIMEOUT=30
      - CELERY_VISIBILITY_TIMEOUT=43200
    networks:
      - egoblur_network

  rabbitmq:
    container_name: egoblur_rabbitmq
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
      # NEW: Added RabbitMQ consumer timeout
      - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit consumer_timeout 3600000
    # NEW: Added persistent volume
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - egoblur_network

  redis:
    container_name: egoblur_redis
    image: redis:6
    ports:
      - "6379:6379"
    # NEW: Added persistent volume
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - egoblur_network

networks:
  egoblur_network:
    name: egoblur_network

# NEW: Added persistent volumes
volumes:
  rabbitmq_data:
  redis_data: